// Code generated by "stringer -type=OpCode ./pkg/vm"; DO NOT EDIT.

package vm

import "strconv"

const _OpCode_name = "OpPush0OpPushBytes1OpPushBytes75OpPushData1OpPushData2OpPushData4OpPushM1OpPush1OpPush2OpPush3OpPush4OpPush5OpPush6OpPush7OpPush8OpPush9OpPush10OpPush11OpPush12OpPush13OpPush14OpPush15OpPush16OpNOPOpJMPOpJMPIFOpJMPIFNOTOpCallOpRETOpAppCallOpSysCallOpTailCallOpDupFromAltStackOpToAltStackOpFromAltStackOpXDropOpXSwapOpXTuckOpDepthOpDropOpDupOpNipOpOverOpPickOpRollOpRotOpSwapOpTuckOpCatOpSubStrOpLeftOpRightOpSizeOpInvertOpAndOpOrOpXorOpEqualOpIncOpDecOpSignOpNegateOpAbsOpNotOpNZOpAddOpSubOpMulOpDivOpModOpShlOpShrOpBoolAndOpBoolOrOpNumEqualOpNumNotEqualOpLTOpGTOpLTEOpGTEOpMinOpMaxOpWithinOpSHA1OpSHA256OpHASH160OpHASH256OpCheckSigOpCheckMultiSigOpArraySizeOpPackOpUnpackOpPickItemOpSetItemOpNewArrayOpNewStructOpAppendOpReverseOpRemoveOpThrowOpThrowIfNot"

var _OpCode_map = map[OpCode]string{
	0:   _OpCode_name[0:7],
	1:   _OpCode_name[7:19],
	75:  _OpCode_name[19:32],
	76:  _OpCode_name[32:43],
	77:  _OpCode_name[43:54],
	78:  _OpCode_name[54:65],
	79:  _OpCode_name[65:73],
	81:  _OpCode_name[73:80],
	82:  _OpCode_name[80:87],
	83:  _OpCode_name[87:94],
	84:  _OpCode_name[94:101],
	85:  _OpCode_name[101:108],
	86:  _OpCode_name[108:115],
	87:  _OpCode_name[115:122],
	88:  _OpCode_name[122:129],
	89:  _OpCode_name[129:136],
	90:  _OpCode_name[136:144],
	91:  _OpCode_name[144:152],
	92:  _OpCode_name[152:160],
	93:  _OpCode_name[160:168],
	94:  _OpCode_name[168:176],
	95:  _OpCode_name[176:184],
	96:  _OpCode_name[184:192],
	97:  _OpCode_name[192:197],
	98:  _OpCode_name[197:202],
	99:  _OpCode_name[202:209],
	100: _OpCode_name[209:219],
	101: _OpCode_name[219:225],
	102: _OpCode_name[225:230],
	103: _OpCode_name[230:239],
	104: _OpCode_name[239:248],
	105: _OpCode_name[248:258],
	106: _OpCode_name[258:275],
	107: _OpCode_name[275:287],
	108: _OpCode_name[287:301],
	109: _OpCode_name[301:308],
	114: _OpCode_name[308:315],
	115: _OpCode_name[315:322],
	116: _OpCode_name[322:329],
	117: _OpCode_name[329:335],
	118: _OpCode_name[335:340],
	119: _OpCode_name[340:345],
	120: _OpCode_name[345:351],
	121: _OpCode_name[351:357],
	122: _OpCode_name[357:363],
	123: _OpCode_name[363:368],
	124: _OpCode_name[368:374],
	125: _OpCode_name[374:380],
	126: _OpCode_name[380:385],
	127: _OpCode_name[385:393],
	128: _OpCode_name[393:399],
	129: _OpCode_name[399:406],
	130: _OpCode_name[406:412],
	131: _OpCode_name[412:420],
	132: _OpCode_name[420:425],
	133: _OpCode_name[425:429],
	134: _OpCode_name[429:434],
	135: _OpCode_name[434:441],
	139: _OpCode_name[441:446],
	140: _OpCode_name[446:451],
	141: _OpCode_name[451:457],
	143: _OpCode_name[457:465],
	144: _OpCode_name[465:470],
	145: _OpCode_name[470:475],
	146: _OpCode_name[475:479],
	147: _OpCode_name[479:484],
	148: _OpCode_name[484:489],
	149: _OpCode_name[489:494],
	150: _OpCode_name[494:499],
	151: _OpCode_name[499:504],
	152: _OpCode_name[504:509],
	153: _OpCode_name[509:514],
	154: _OpCode_name[514:523],
	155: _OpCode_name[523:531],
	156: _OpCode_name[531:541],
	158: _OpCode_name[541:554],
	159: _OpCode_name[554:558],
	160: _OpCode_name[558:562],
	161: _OpCode_name[562:567],
	162: _OpCode_name[567:572],
	163: _OpCode_name[572:577],
	164: _OpCode_name[577:582],
	165: _OpCode_name[582:590],
	167: _OpCode_name[590:596],
	168: _OpCode_name[596:604],
	169: _OpCode_name[604:613],
	170: _OpCode_name[613:622],
	172: _OpCode_name[622:632],
	174: _OpCode_name[632:647],
	192: _OpCode_name[647:658],
	193: _OpCode_name[658:664],
	194: _OpCode_name[664:672],
	195: _OpCode_name[672:682],
	196: _OpCode_name[682:691],
	197: _OpCode_name[691:701],
	198: _OpCode_name[701:712],
	200: _OpCode_name[712:720],
	201: _OpCode_name[720:729],
	202: _OpCode_name[729:737],
	240: _OpCode_name[737:744],
	241: _OpCode_name[744:756],
}

func (i OpCode) String() string {
	if str, ok := _OpCode_map[i]; ok {
		return str
	}
	return "OpCode(" + strconv.FormatInt(int64(i), 10) + ")"
}
